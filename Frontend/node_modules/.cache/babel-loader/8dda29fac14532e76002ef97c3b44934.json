{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\200872\\\\Desktop\\\\HearthDisease\\\\HearthDiseasePrediction\\\\Frontend\\\\src\\\\Page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { predict } from './api';\nimport './Page.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = props => {\n  _s();\n\n  const [chestType, setChestType] = useState();\n  const [thalach, setThalach] = useState();\n  const [exang, setExang] = useState();\n  const [slope, setSlope] = useState();\n  const [vessel, setVessel] = useState();\n  const [result, setResult] = useState(null);\n  const [disiaseText, setDisiaseText] = useState(\"\");\n\n  const handlePredict = () => {\n    if (thalach == 0) {\n      alert(\"All the fields must be filled.\");\n      return;\n    }\n\n    predict({\n      \"cp\": chestType,\n      \"thalach\": thalach,\n      \"exang\": exang,\n      \"slope\": slope,\n      \"ca\": vessel\n    }).then(result => result.json()).then(result => {\n      setResult(result);\n    }, error => {\n      alert(\"Error occurred on API call\");\n      return;\n    });\n  };\n\n  useEffect(() => {\n    setChestType(1);\n    setThalach(0);\n    setExang(0);\n    setSlope(1);\n    setVessel(0);\n  }, []);\n  useEffect(() => {\n    if (result == 1) {\n      setDisiaseText(\"You Have Heart Disease\");\n    } else if (result == 0) {\n      setDisiaseText(\"You Do Not Have Heart Disease\");\n    } else {\n      return;\n    }\n  }, [result]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"features\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      className: \"pageHeader\",\n      children: \"Heart Disease Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      className: \"featureLabel\",\n      children: \"Chest Pain Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n      onChange: event => setChestType(event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"Typical Angina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"Atypical Angina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3\",\n        children: \"Non-Anginal Pain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"4\",\n        children: \"Asymptomatic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      className: \"featureLabel\",\n      children: \"Thalach\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Max Heart Rate\",\n      onChange: event => setThalach(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      className: \"featureLabel\",\n      children: \"Exercise Induced Angina\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n      onChange: event => setExang(event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        selected: true,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      className: \"featureLabel\",\n      children: \"Slope\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n      onChange: event => setSlope(event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"Upsloping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"Flat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3\",\n        children: \"Downsloping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      className: \"featureLabel\",\n      children: \"Number of Major Vessels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n      onChange: event => setVessel(event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3\",\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      style: {\n        \"marginTop\": \"30px\"\n      },\n      onClick: handlePredict,\n      children: \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      className: \"outputText\",\n      children: disiaseText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page, \"v7KualXSl3C4Veo1YZ6LLQAQqSA=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Form","Button","predict","Page","props","chestType","setChestType","thalach","setThalach","exang","setExang","slope","setSlope","vessel","setVessel","result","setResult","disiaseText","setDisiaseText","handlePredict","alert","then","json","error","event","target","value"],"sources":["C:/Users/200872/Desktop/HearthDisease/HearthDiseasePrediction/Frontend/src/Page.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { Form, Button } from 'react-bootstrap';\nimport { predict } from './api';\nimport './Page.css';\n\nconst Page = (props) => {\n    const [chestType, setChestType] = useState();\n    const [thalach, setThalach] = useState();\n    const [exang, setExang] = useState();\n    const [slope, setSlope] = useState();\n    const [vessel, setVessel] = useState();\n    const [result, setResult] = useState(null);\n    const [disiaseText, setDisiaseText] = useState(\"\");\n\n    const handlePredict = () => {\n        if (thalach == 0) {\n            alert(\"All the fields must be filled.\");\n            return;\n        }\n        predict({\"cp\": chestType, \"thalach\": thalach, \"exang\": exang, \"slope\": slope, \"ca\": vessel})\n        .then(result => result.json())\n        .then(\n            (result) => {\n                setResult(result);\n            },\n            (error) => {\n                alert(\"Error occurred on API call\");\n                return;\n            }\n        )\n        \n    }\n    useEffect(() => {\n        setChestType(1);\n        setThalach(0);\n        setExang(0);\n        setSlope(1);\n        setVessel(0);\n    }, []);\n\n    useEffect(() => {\n        if (result == 1) {\n            setDisiaseText(\"You Have Heart Disease\");\n        } else if (result == 0) {\n            setDisiaseText(\"You Do Not Have Heart Disease\");\n        } else {\n            return;\n        }\n    }, [result]);\n\n    return (\n        <Form name=\"features\">\n            <Form.Label className='pageHeader'>Heart Disease Prediction</Form.Label>\n            <br/>\n            <Form.Label className=\"featureLabel\">Chest Pain Type</Form.Label>\n            <Form.Select onChange={(event) => setChestType(event.target.value)}>\n                <option value=\"1\">Typical Angina</option>\n                <option value=\"2\">Atypical Angina</option>\n                <option value=\"3\">Non-Anginal Pain</option>\n                <option value=\"4\">Asymptomatic</option>\n            </Form.Select>\n\n            <Form.Label className=\"featureLabel\">Thalach</Form.Label>\n            <Form.Control \n                type=\"text\"\n                placeholder=\"Max Heart Rate\"\n                onChange={(event) => setThalach(event.target.value)}\n            ></Form.Control>\n\n            <Form.Label className=\"featureLabel\">Exercise Induced Angina</Form.Label>\n            <Form.Select onChange={(event) => setExang(event.target.value)}>\n                <option value=\"0\" selected>Yes</option>\n                <option value=\"1\">No</option>\n            </Form.Select>\n\n            <Form.Label className=\"featureLabel\">Slope</Form.Label>\n            <Form.Select onChange={(event) => setSlope(event.target.value)}>\n                <option value=\"1\">Upsloping</option>\n                <option value=\"2\">Flat</option>\n                <option value=\"3\">Downsloping</option>\n            </Form.Select>\n\n            <Form.Label className=\"featureLabel\">Number of Major Vessels</Form.Label>\n            <Form.Select onChange={(event) => setVessel(event.target.value)}>\n                <option value=\"0\">0</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n            </Form.Select>\n\n            <Button \n                variant='primary'\n                style={{ \"marginTop\": \"30px\" }}\n                onClick={handlePredict}\n                >\n                Predict\n            </Button>\n            <br/>\n            <Form.Label className=\"outputText\">{disiaseText}</Form.Label>\n        </Form>\n    );\n}\n\nexport default Page;"],"mappings":"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"},"metadata":{},"sourceType":"module"}